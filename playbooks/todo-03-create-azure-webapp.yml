- name: Create Azure Webapp for TODO Application
  hosts: localhost
  connection: local
  vars_files:
    - ./vars-myvars.yml
  roles:
    - { role: azure.azure_preview_modules }

  tasks:

    - name: Obtain Azure Container Registry Facts
      azure_rm_containerregistry_facts:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}ACRegistry2019"
        retrieve_credentials: true
      register: acr_output

    - name: Obtain Cosmos DB Facts
      azure_rm_cosmosdbaccount_facts:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}-cosmosdb"
        retrieve_keys: all
        retrieve_connection_strings: yes
      register: cosmos_output

    - name: Getting ACR Username
      set_fact:
        acrusername: "{{ acr_output.registries[0].name }}"

    - name: Getting ACR Password
      set_fact:
        acrpassword: "{{ acr_output.registries[0].credentials.password }}"

    - name: Getting ACR Host
      set_fact:
        acrhostname: "{{ acr_output.registries[0].login_server }}"

    - name: Getting CosmosDB Connection String
      set_fact:
        constr: "{{ cosmos_output.accounts[0].connection_strings.connection_strings[0].connection_string }}"

    - name: Create Azure Web App for TODO Application utilizing container pushed to Azure Container Registry
      azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}-todo-webapp"
        plan: "{{ vm_name }}-appservice-plan"
        app_settings:
          MONGO_DBCONNECTION: "{{ constr }}"
        container_settings:
          name: ossdemo/nodejs-todo
          registry_server_url: "{{ acrhostname }}"
          registry_server_user: "{{ acrusername }}"
          registry_server_password: "{{ acrpassword }}"
