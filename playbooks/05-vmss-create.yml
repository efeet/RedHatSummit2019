- name: Create Virtual Machine Scale Set for Mattermost
  hosts: localhost
  tasks:

    - name: Add VMSS Subnet to existing Virtual network
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}-mattermost-vmss-subnet"
        address_prefix: "10.10.30.0/24"
        virtual_network: "{{ vm_name }}-mattermost-vnet"

    - name: Create public IP address
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Static
        name: "{{ vm_name }}-mattermost-vmss-pip-{{ rnum }}"
        domain_name: "{{ vm_name }}-mattermost-vmss-{{ rnum }}"

    - name: Create Network Security Group that allows SSH
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}-mattermost-vmss-nsg"
        rules:
          - name: SSH
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 1001
            direction: Inbound

    - name: Create Load Balancer for Mattermost VMSS
      azure_rm_loadbalancer:
        name: "{{ vm_name }}-mattermost-lb"
#        location: "{{ location }}"
        resource_group: "{{ resource_group }}"
        public_ip: "{{ vm_name }}-mattermost-vmss-pip-{{ rnum }}"
        probe_protocol: Tcp
        probe_port: 8065
        probe_interval: 10
        probe_fail_count: 3
        protocol: Tcp
        load_distribution: Default
        frontend_port: 80
        backend_port: 8065
        idle_timeout: 4
        natpool_frontend_port_start: 50000
        natpool_frontend_port_end: 50040
        natpool_backend_port: 22
        natpool_protocol: Tcp

    - name: Create VMSS
      azure_rm_virtualmachine_scaleset:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}-mattermost-vmss"
        vm_size: Standard_DS1_v2
        admin_username: "{{ admin_username }}"
#        admin_password: "{{ admin_password }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: /home/{{ admin_username }}/.ssh/authorized_keys
            key_data: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        capacity: 2
        virtual_network_name: "{{ vm_name }}-mattermost-vnet"
        subnet_name: "{{ vm_name }}-mattermost-vmss-subnet"
        upgrade_policy: Manual
        tier: Standard
        managed_disk_type: Standard_LRS
        os_disk_caching: ReadWrite
        image:
          name: "{{ vm_name }}-mattermost-disk-image"
          resource_group: "{{ resource_group }}"
        load_balancer: "{{ vm_name }}-mattermost-lb"

    - name: Getting Public IP address of the LB
      azure_rm_publicipaddress_facts:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}-mattermost-vmss-pip-{{ rnum }}"
      register: output

    - name: Update Firewall Rules using Azure REST API
      azure_rm_resource:
        api_version: '2017-12-01'
        resource_group: "{{ resource_group }}"
        provider: dbformysql
        resource_type: servers
        resource_name: "{{ vm_name }}-mattermost-mysql"
        subresource:
          - type: firewallrules
            name: vmss
        body:
          properties: 
            startIpAddress: "{{ output.ansible_facts.azure_publicipaddresses[0].properties.ipAddress }}"
            endIpAddress: "{{ output.ansible_facts.azure_publicipaddresses[0].properties.ipAddress }}"
